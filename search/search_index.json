{"config":{"indexing":"full","lang":["en","fr"],"min_search_length":3,"prebuild_index":false,"separator":"[\\s\\-]+"},"docs":[{"location":"","text":"noobii \u00b6 Recueils d'un DevOps pratiquement out of disk. Les souvenirs oubli\u00e9s ne sont pas perdus. Sigmund Freudoch' Mon havre de paix, celui ou je vais pouvoir emmagasiner tous les blocks de mon cerveau qui ne demande qu'\u00e0 \u00eatre lib\u00e9r\u00e9s pour que je puisse continuer de me gaver. Cr\u00e9\u00e9 avec MkDocs - Heberg\u00e9 sur GitHub Pages - D\u00e9ploy\u00e9 avec GitHub Actions","title":"noobii"},{"location":"#noobii","text":"Recueils d'un DevOps pratiquement out of disk. Les souvenirs oubli\u00e9s ne sont pas perdus. Sigmund Freudoch' Mon havre de paix, celui ou je vais pouvoir emmagasiner tous les blocks de mon cerveau qui ne demande qu'\u00e0 \u00eatre lib\u00e9r\u00e9s pour que je puisse continuer de me gaver. Cr\u00e9\u00e9 avec MkDocs - Heberg\u00e9 sur GitHub Pages - D\u00e9ploy\u00e9 avec GitHub Actions","title":"noobii"},{"location":"bookmarks/azure/","text":"","title":"Azure"},{"location":"bookmarks/docker/","text":"","title":"Docker"},{"location":"bookmarks/github-actions/","text":"","title":"GitHub Actions"},{"location":"bookmarks/kubernetes/","text":"","title":"Kubernetes"},{"location":"bookmarks/linux/","text":"","title":"Linux"},{"location":"bookmarks/overview/","text":"EN Test","title":"Overview"},{"location":"bookmarks/terraform/","text":"","title":"Terraform"},{"location":"tutorials/mkdocs/","text":"Commands \u00b6 mkdocs new [dir-name] - Create a new project. mkdocs serve - Start the live-reloading docs server. mkdocs build - Build the documentation site. mkdocs -h - Print help message and exit. Project layout \u00b6 mkdocs.yml # The configuration file. docs/ index.md # The documentation homepage. ... # Other markdown pages, images and other files.","title":"MkDocs"},{"location":"tutorials/mkdocs/#commands","text":"mkdocs new [dir-name] - Create a new project. mkdocs serve - Start the live-reloading docs server. mkdocs build - Build the documentation site. mkdocs -h - Print help message and exit.","title":"Commands"},{"location":"tutorials/mkdocs/#project-layout","text":"mkdocs.yml # The configuration file. docs/ index.md # The documentation homepage. ... # Other markdown pages, images and other files.","title":"Project layout"},{"location":"tutorials/overview/","text":"","title":"Overview"},{"location":"tutorials/datadog/deploy-agent-on-kubernetes-with-helm/","text":"","title":"Deploy Agent on Kubernetes with Helm"},{"location":"tutorials/github-actions/lerna/","text":"Build and publish a Lerna monorepo, on GitHub, with Actions \u00b6 Use case \u00b6 The goal's to automatise build and publish of Lerna monorepos. Nothing Le but est d'automatiser le build ainsi que le publish d'un monorepos Lerna. Jusque l\u00e0, rien de bien m\u00e9chant. C'\u00e9tait sans compter sur ma m\u00e9connaissance d'Actions et des subtilit\u00e9s de Lerna. En d\u00e9tails: R\u00e9cup\u00e9rer un package priv\u00e9 pr\u00e9sent sur un registry npmjs Build et release la librairie avec Lerna Publish le package sur le registry GitHub de mon organisation G\u00e9n\u00e9rer et lier un CHANGELOG pour chaque nouvelle version du package Voici ci-dessous la m\u00e9thode qui m'a permis d'arriver au bout en respectant la demande initiale. Actions utilis\u00e9es \u00b6 Action Marketplace actions/checkout@v2 Actions Marketplace actions/setup-node@v2 Actions Marketplace Cr\u00e9ation du workflow \u00b6 A la racine de votre monorepo, ouvrez un terminal et copiez-collez le block ci-dessous : 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36 37 38 39 40 41 42 43 44 45 46 47 48 49 50 51 52 53 54 55 56 57 58 59 60 61 62 63 mkdir -p ./.github/workflows && echo ' name : Release independent Lerna libs on : push : branches : - master pull_request : branches : - master jobs : release : runs-on : ubuntu-20.04 steps : - uses : actions/checkout@v2 with : fetch-depth : 0 - name : Setup Node with NPM Registry uses : actions/setup-node@v2 with : node-version : '12.x' registry-url : 'https://registry.npmjs.org' always-auth : false scope : '@your-npm-owner' - name : On PR, checkout to ${GITHUB_HEAD_REF} - if : github.ref != 'refs/heads/master' run : git checkout -b ${GITHUB_HEAD_REF} - run : npm install env : NODE_AUTH_TOKEN : ${{secrets.NPM_TOKEN}} - name : Setup Node with GITHUB Registry uses : actions/setup-node@v2 with : registry-url : 'https://npm.pkg.github.com' scope : '@your-github-organization' - name : Git Config, required by Lerna run : | git config --global user.name \"${{ github.actor }}\" git config --global user.email \"${{ github.actor }}@users.noreply.github.com\" - name : On PR, run Lerna BOOTSTRAP and BUILD if : github.ref != 'refs/heads/master' run : | npm run boot:libs npm run build:libs - name : On master, run Lerna BOOTSTRAP, RELEASE, BUILD and PUBLISH if : github.ref == 'refs/heads/master' run : | npm run boot:libs npm run release:libs npm run build:libs npm run publish:libs env : NODE_AUTH_TOKEN : ${{ secrets.GITHUB_TOKEN }} ' > ./.github/workflows/cicd.yaml","title":"Build and publish Lerna monorepo"},{"location":"tutorials/github-actions/lerna/#build-and-publish-a-lerna-monorepo-on-github-with-actions","text":"","title":"Build and publish a Lerna monorepo, on GitHub, with Actions"},{"location":"tutorials/github-actions/lerna/#use-case","text":"The goal's to automatise build and publish of Lerna monorepos. Nothing Le but est d'automatiser le build ainsi que le publish d'un monorepos Lerna. Jusque l\u00e0, rien de bien m\u00e9chant. C'\u00e9tait sans compter sur ma m\u00e9connaissance d'Actions et des subtilit\u00e9s de Lerna. En d\u00e9tails: R\u00e9cup\u00e9rer un package priv\u00e9 pr\u00e9sent sur un registry npmjs Build et release la librairie avec Lerna Publish le package sur le registry GitHub de mon organisation G\u00e9n\u00e9rer et lier un CHANGELOG pour chaque nouvelle version du package Voici ci-dessous la m\u00e9thode qui m'a permis d'arriver au bout en respectant la demande initiale.","title":"Use case"},{"location":"tutorials/github-actions/lerna/#actions-utilisees","text":"Action Marketplace actions/checkout@v2 Actions Marketplace actions/setup-node@v2 Actions Marketplace","title":"Actions utilis\u00e9es"},{"location":"tutorials/github-actions/lerna/#creation-du-workflow","text":"A la racine de votre monorepo, ouvrez un terminal et copiez-collez le block ci-dessous : 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36 37 38 39 40 41 42 43 44 45 46 47 48 49 50 51 52 53 54 55 56 57 58 59 60 61 62 63 mkdir -p ./.github/workflows && echo ' name : Release independent Lerna libs on : push : branches : - master pull_request : branches : - master jobs : release : runs-on : ubuntu-20.04 steps : - uses : actions/checkout@v2 with : fetch-depth : 0 - name : Setup Node with NPM Registry uses : actions/setup-node@v2 with : node-version : '12.x' registry-url : 'https://registry.npmjs.org' always-auth : false scope : '@your-npm-owner' - name : On PR, checkout to ${GITHUB_HEAD_REF} - if : github.ref != 'refs/heads/master' run : git checkout -b ${GITHUB_HEAD_REF} - run : npm install env : NODE_AUTH_TOKEN : ${{secrets.NPM_TOKEN}} - name : Setup Node with GITHUB Registry uses : actions/setup-node@v2 with : registry-url : 'https://npm.pkg.github.com' scope : '@your-github-organization' - name : Git Config, required by Lerna run : | git config --global user.name \"${{ github.actor }}\" git config --global user.email \"${{ github.actor }}@users.noreply.github.com\" - name : On PR, run Lerna BOOTSTRAP and BUILD if : github.ref != 'refs/heads/master' run : | npm run boot:libs npm run build:libs - name : On master, run Lerna BOOTSTRAP, RELEASE, BUILD and PUBLISH if : github.ref == 'refs/heads/master' run : | npm run boot:libs npm run release:libs npm run build:libs npm run publish:libs env : NODE_AUTH_TOKEN : ${{ secrets.GITHUB_TOKEN }} ' > ./.github/workflows/cicd.yaml","title":"Cr\u00e9ation du workflow"},{"location":"tutorials/github-actions/maven/","text":"","title":"Build Java application with Maven"},{"location":"tutorials/github-actions/mkdocs/","text":"","title":"Mkdocs"},{"location":"tutorials/github-actions/node-backend/","text":"","title":"Template NodeJS"},{"location":"tutorials/github-actions/node-frontend/","text":"","title":"Template Angular"},{"location":"fr/","text":"noobii \u00b6 Recueils d'un DevOps pratiquement out of disk. Les souvenirs oubli\u00e9s ne sont pas perdus. Sigmund Freudoch' Mon havre de paix, celui ou je vais pouvoir emmagasiner tous les blocks de mon cerveau qui ne demande qu'\u00e0 \u00eatre lib\u00e9r\u00e9s pour que je puisse continuer de me gaver. Cr\u00e9\u00e9 avec MkDocs - Heberg\u00e9 sur GitHub Pages - D\u00e9ploy\u00e9 avec GitHub Actions","title":"noobii"},{"location":"fr/#noobii","text":"Recueils d'un DevOps pratiquement out of disk. Les souvenirs oubli\u00e9s ne sont pas perdus. Sigmund Freudoch' Mon havre de paix, celui ou je vais pouvoir emmagasiner tous les blocks de mon cerveau qui ne demande qu'\u00e0 \u00eatre lib\u00e9r\u00e9s pour que je puisse continuer de me gaver. Cr\u00e9\u00e9 avec MkDocs - Heberg\u00e9 sur GitHub Pages - D\u00e9ploy\u00e9 avec GitHub Actions","title":"noobii"},{"location":"fr/bookmarks/azure/","text":"","title":"Azure"},{"location":"fr/bookmarks/docker/","text":"","title":"Docker"},{"location":"fr/bookmarks/github-actions/","text":"","title":"GitHub Actions"},{"location":"fr/bookmarks/kubernetes/","text":"","title":"Kubernetes"},{"location":"fr/bookmarks/linux/","text":"","title":"Linux"},{"location":"fr/bookmarks/overview/","text":"FR Test","title":"Aper\u00e7u"},{"location":"fr/bookmarks/terraform/","text":"","title":"Terraform"},{"location":"fr/tutorials/mkdocs/","text":"Commands \u00b6 mkdocs new [dir-name] - Create a new project. mkdocs serve - Start the live-reloading docs server. mkdocs build - Build the documentation site. mkdocs -h - Print help message and exit. Project layout \u00b6 mkdocs.yml # The configuration file. docs/ index.md # The documentation homepage. ... # Other markdown pages, images and other files.","title":"MkDocs"},{"location":"fr/tutorials/mkdocs/#commands","text":"mkdocs new [dir-name] - Create a new project. mkdocs serve - Start the live-reloading docs server. mkdocs build - Build the documentation site. mkdocs -h - Print help message and exit.","title":"Commands"},{"location":"fr/tutorials/mkdocs/#project-layout","text":"mkdocs.yml # The configuration file. docs/ index.md # The documentation homepage. ... # Other markdown pages, images and other files.","title":"Project layout"},{"location":"fr/tutorials/overview/","text":"","title":"Aper\u00e7u"},{"location":"fr/tutorials/datadog/deploy-agent-on-kubernetes-with-helm/","text":"","title":"Deploy Agent on Kubernetes with Helm"},{"location":"fr/tutorials/github-actions/lerna/","text":"Build et publish un monorepo Lerna sur GitHub, avec Actions \u00b6 Cas d'usage \u00b6 Le but est d'automatiser le build ainsi que le publish d'un monorepos Lerna. Jusque l\u00e0, rien de bien m\u00e9chant. C'\u00e9tait sans compter sur ma m\u00e9connaissance d'Actions et des subtilit\u00e9s de Lerna. En d\u00e9tails: R\u00e9cup\u00e9rer un package priv\u00e9 pr\u00e9sent sur un registry npmjs Build et release la librairie avec Lerna Publish le package sur le registry GitHub de mon organisation G\u00e9n\u00e9rer et lier un CHANGELOG pour chaque nouvelle version du package Voici ci-dessous la m\u00e9thode qui m'a permis d'arriver au bout en respectant la demande initiale. Actions utilis\u00e9es \u00b6 Action Marketplace actions/checkout@v2 Actions Marketplace actions/setup-node@v2 Actions Marketplace Cr\u00e9ation du workflow \u00b6 A la racine de votre monorepo, ouvrez un terminal et copiez-collez le block ci-dessous : 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36 37 38 39 40 41 42 43 44 45 46 47 48 49 50 51 52 53 54 55 56 57 58 59 60 61 62 63 mkdir -p ./.github/workflows && echo ' name: Release independent Lerna libs on: push: branches: - master pull_request: branches: - master jobs: release: runs-on: ubuntu-20.04 steps: - uses: actions/checkout@v2 with: fetch-depth: 0 - name: Setup Node with NPM Registry uses: actions/setup-node@v2 with: node-version: ' 12 .x ' registry-url: ' https://registry.npmjs.org ' always-auth: false scope: ' @your-npm-owner ' - name: On PR, checkout to ${ GITHUB_HEAD_REF } - if: github.ref != ' refs/heads/master ' run: git checkout -b ${ GITHUB_HEAD_REF } - run: npm install env: NODE_AUTH_TOKEN: ${{ secrets.NPM_TOKEN }} - name: Setup Node with GITHUB Registry uses: actions/setup-node@v2 with: registry-url: ' https://npm.pkg.github.com ' scope: ' @your-github-organization ' - name: Git Config, required by Lerna run: | git config --global user.name \"${{ github.actor }}\" git config --global user.email \"${{ github.actor }}@users.noreply.github.com\" - name: On PR, run Lerna BOOTSTRAP and BUILD if: github.ref != ' refs/heads/master ' run: | npm run boot:libs npm run build:libs - name: On master, run Lerna BOOTSTRAP, RELEASE, BUILD and PUBLISH if: github.ref == ' refs/heads/master ' run: | npm run boot:libs npm run release:libs npm run build:libs npm run publish:libs env: NODE_AUTH_TOKEN: ${{ secrets.GITHUB_TOKEN }} ' > ./.github/workflows/cicd.yaml","title":"Build and publish Lerna monorepo"},{"location":"fr/tutorials/github-actions/lerna/#build-et-publish-un-monorepo-lerna-sur-github-avec-actions","text":"","title":"Build et publish un monorepo Lerna sur GitHub, avec Actions"},{"location":"fr/tutorials/github-actions/lerna/#cas-dusage","text":"Le but est d'automatiser le build ainsi que le publish d'un monorepos Lerna. Jusque l\u00e0, rien de bien m\u00e9chant. C'\u00e9tait sans compter sur ma m\u00e9connaissance d'Actions et des subtilit\u00e9s de Lerna. En d\u00e9tails: R\u00e9cup\u00e9rer un package priv\u00e9 pr\u00e9sent sur un registry npmjs Build et release la librairie avec Lerna Publish le package sur le registry GitHub de mon organisation G\u00e9n\u00e9rer et lier un CHANGELOG pour chaque nouvelle version du package Voici ci-dessous la m\u00e9thode qui m'a permis d'arriver au bout en respectant la demande initiale.","title":"Cas d'usage"},{"location":"fr/tutorials/github-actions/lerna/#actions-utilisees","text":"Action Marketplace actions/checkout@v2 Actions Marketplace actions/setup-node@v2 Actions Marketplace","title":"Actions utilis\u00e9es"},{"location":"fr/tutorials/github-actions/lerna/#creation-du-workflow","text":"A la racine de votre monorepo, ouvrez un terminal et copiez-collez le block ci-dessous : 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36 37 38 39 40 41 42 43 44 45 46 47 48 49 50 51 52 53 54 55 56 57 58 59 60 61 62 63 mkdir -p ./.github/workflows && echo ' name: Release independent Lerna libs on: push: branches: - master pull_request: branches: - master jobs: release: runs-on: ubuntu-20.04 steps: - uses: actions/checkout@v2 with: fetch-depth: 0 - name: Setup Node with NPM Registry uses: actions/setup-node@v2 with: node-version: ' 12 .x ' registry-url: ' https://registry.npmjs.org ' always-auth: false scope: ' @your-npm-owner ' - name: On PR, checkout to ${ GITHUB_HEAD_REF } - if: github.ref != ' refs/heads/master ' run: git checkout -b ${ GITHUB_HEAD_REF } - run: npm install env: NODE_AUTH_TOKEN: ${{ secrets.NPM_TOKEN }} - name: Setup Node with GITHUB Registry uses: actions/setup-node@v2 with: registry-url: ' https://npm.pkg.github.com ' scope: ' @your-github-organization ' - name: Git Config, required by Lerna run: | git config --global user.name \"${{ github.actor }}\" git config --global user.email \"${{ github.actor }}@users.noreply.github.com\" - name: On PR, run Lerna BOOTSTRAP and BUILD if: github.ref != ' refs/heads/master ' run: | npm run boot:libs npm run build:libs - name: On master, run Lerna BOOTSTRAP, RELEASE, BUILD and PUBLISH if: github.ref == ' refs/heads/master ' run: | npm run boot:libs npm run release:libs npm run build:libs npm run publish:libs env: NODE_AUTH_TOKEN: ${{ secrets.GITHUB_TOKEN }} ' > ./.github/workflows/cicd.yaml","title":"Cr\u00e9ation du workflow"},{"location":"fr/tutorials/github-actions/maven/","text":"","title":"Build Java application with Maven"},{"location":"fr/tutorials/github-actions/mkdocs/","text":"","title":"Mkdocs"},{"location":"fr/tutorials/github-actions/node-backend/","text":"","title":"Template NodeJS"},{"location":"fr/tutorials/github-actions/node-frontend/","text":"","title":"Template Angular"}]}